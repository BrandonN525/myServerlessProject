service: myserverlessproject
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: serverlessUser
  environment:
        tableName: player-points
        bucketName: serverlessbucket10015
  iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:*
          - s3:*
        Resource: '*'
  apiGateway:
        apiKeys: 
            - free:
                - APIKey4
            - paid:
                - MyPaidKey4  
        usagePlan:
            - free:
                quota:
                    limit: 10
                    period: MONTH
                throttle:
                    burstLimit: 2
                    rateLimit: 1
            - paid:
                quota:
                    limit: 1000
                    period: MONTH
                throttle:
                    burstLimit: 20
                    rateLimit: 10

plugins:
    - serverless-s3-sync

functions:
    getUser:
        handler: lambdas/endpoints/getUser.handler
        events:
            - http:
                  path: get-user/{ID}
                  method: GET
                  cors: true
                  private: true

    getPlayerScore:
        handler: lambdas/endpoints/getPlayerScore.handler
        events:
            - http:
                  path: get-player-score/{ID}
                  method: GET
                  cors: true
                  private: true

    createPlayerScore:
        handler: lambdas/endpoints/createPlayerScore.handler
        events:
            - http:
                  path: create-player-score/{ID}
                  method: POST
                  cors: true
                  private: true

    createFile:
        handler: lambdas/endpoints/createFile.handler
        events:
            - http:
                  path: create-file/{fileName}
                  method: POST
                  cors: true
                  private: true

    getFile:
        handler: lambdas/endpoints/getFile.handler
        events:
            - http:
                  path: get-file/{fileName}
                  method: GET
                  cors: true
                  private: true

resources:
    Resources:
        DemoBucketUpload:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: serverlessbucket10015

        MyDynamoDbTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: player-points
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST

custom:
    s3Sync:
        - bucketName: serverlessbucket10015
          localDir: UploadData

    s3UploadBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: serverlessbucket10015